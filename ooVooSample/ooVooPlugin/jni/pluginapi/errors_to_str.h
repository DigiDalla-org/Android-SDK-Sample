// This file is automatically generated from errors.def
// Don't change this file. All your changes will deleted
//
#ifndef _CORE_ERROR_TO_STR_H_
#define _CORE_ERROR_TO_STR_H_

namespace oovoo {
  namespace sdk {
    inline const char* ErrorToString(sdk_error error)
    {
       switch (error)
       {
          case sdk_error::OK:                               return "OK";
          case sdk_error::InvalidParameter:                 return "Invalid Parameter";
          case sdk_error::InvalidPointer:                   return "Invalid Pointer";
          case sdk_error::InvalidOperation:                 return "Invalid Operation";
          case sdk_error::MethodNotImplemented:             return "Method Not Implemented";
          case sdk_error::DeviceNotFound:                   return "Device Not Found";
          case sdk_error::AlreadyInSession:                 return "Already In Session";
          case sdk_error::DuplicateParticipantId:           return "Duplicate Participant Id";
          case sdk_error::ConferenceIdNotValid:             return "Conference ID Not Valid";
          case sdk_error::ClientIdNotValid:                 return "Client ID Not Valid";
          case sdk_error::ParticipantIdNotValid:            return "ParticipantId Not Valid";
          case sdk_error::CameraIdNotValid:                 return "Camera ID Not Valid";
          case sdk_error::MicrophoneIdNotValid:             return "Microphone ID Not Valid";
          case sdk_error::SpeakerIdNotValid:                return "Speaker ID Not Valid";
          case sdk_error::VolumeNotValid:                   return "Volume Not Valid";
          case sdk_error::ServerAddressNotValid:            return "Server Address Not Valid";
          case sdk_error::GroupQuotaExceeded:               return "Group Quota Exceeded";
          case sdk_error::NotInitialized:                   return "Not Initialized";
          case sdk_error::Error:                            return "Error";
          case sdk_error::NotAuthorized:                    return "Not Authorized";
          case sdk_error::ConnectionTimeout:                return "Connection Timeout";
          case sdk_error::DisconnectedByPeer:               return "Disconnected By Peer";
          case sdk_error::InvalidToken:                     return "Invalid Token";
          case sdk_error::ExpiredToken:                     return "Expired Token";
          case sdk_error::PreviousOperationNotCompleted:    return "Previous Operation Not Completed";
          case sdk_error::AppIdNotValid:                    return "AppId Not Valid";
          case sdk_error::NoAvs:                            return "No AVS";
          case sdk_error::ActionNotPermitted:               return "Action Not Permitted";
          case sdk_error::DeviceNotInitialized:             return "Device Not Initialized";
          case sdk_error::Reconnecting:                     return "Network Is Reconnecting";
          case sdk_error::Held:                             return "Application on hold";
          case sdk_error::SSLCertificateVerificationFailed: return "SSL Certificates Verification Failed";
          case sdk_error::ParameterAlreadySet:              return "Parameter Already Set";
          case sdk_error::AccessDenied:                     return "Access Denied";
          case sdk_error::NoInternetConnection:             return "No Internet Connection";
          case sdk_error::NotEnoughMemory:                  return "Not Enough Memory";
          case sdk_error::ResolutionNotSupported:           return "Resolution not supported";
          case sdk_error::AuthenticationFailed:             return "Authentication Failed";
          case sdk_error::ApiVersionNotFound:               return "API Version Not Found";
          case sdk_error::CreateGroupFailed:                return "Create Group Failed";
          case sdk_error::InvalidContentType:               return "Invalid Content Type";
          case sdk_error::UnsupportedContentType:           return "Unsupported Content Type";
          case sdk_error::HttpServerError:                  return "Http server error";
          default:                                          return "Unknown error";
      }
    }
  } // namespace sdk
} // namespace oovoo
#endif
